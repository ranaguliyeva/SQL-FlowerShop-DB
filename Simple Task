--DDL
drop table countries1;

create table countries1(
name varchar(20),
capital varchar(20),
citizens number);

alter table countries add constraint countries1_pk primary key(name);
alter table countries add constraint citizens_chck check(citizens between 500000 and 1000000);

--DML
insert into countries1 (name, capital, citizens) values ('Azerbaijan', 'Baku', 10000000);
commit;
insert into countries1 (name, capital, citizens) values ('Russia', 'Moscow', 140000000);
commit;
insert into countries1 (name, capital, citizens) values ('Lithuania', 'Vilnius', 3000000);
commit;
insert into countries1 (name, capital, citizens) values ('Turkey', 'Istanbul', 83000000);
commit;
insert into countries1 (name, capital, citizens) values ('Japan', 'Tokyo', 126000000);
commit;
insert into countries1(name, capital, citizens) values ('Azerbaijan', 'Baku', 11000000);
commit;

update countries1 set capital='Ankara' where name='Turkey';
delete from countries1 where name='Azerbaijan' and citizens=11000000;

--Select statement. Queries
select * from countries1;

select * from countries1
where name like '%ia';

select * from countries1
where citizens > 10000000
order by citizens desc;

select name, citizens
from countries1
order by citizens desc
fetch next 3 rows only;

select avg(citizens) as average_population
from countries1;

select capital from countries1
group by capital
having avg(citizens) < 10000000;

--SET operators
select employee_id, job_id from employees
where first_name LIKE '%a%'
union 
select employee_id, job_id from employees
where salary >=1000;

select employee_id, first_name from employees
where email like '%i%'
intersect
select employee_id, first_name from employees
order by first_name desc;

select first_name, employee_id from employees
where department_id=10
minus
select first_name, employee_id from employees
where last_name like 'a%';

--Join
select e.first_name, e.last_name, j.job_title
from employees e
join jobs j on e.job_id=j.job_id;

select e.first_name as employee_name, m.first_name as manager_name
from employees e
join employees m on e.employee_id=m.manager_id; 

select employee_id, salary, email from employees
natural join departments;


-- aggregate functions
select count(e.employee_id) as num_emp , d.department_name from employees e
join departments d on e.department_id=d.department_id
group by d.department_name;

select sum(salary) from employees;

select min(salary) from employees
where department_id=100;

select max(e.salary), d.department_name from employees e
join departments d on e.department_id=d.department_id
where d.department_id>150
group by d.department_name;

select avg(salary) from employees;

--conversion
--conversion functions
select to_char(hire_date, 'YYYY-MM-DD') as hire_date_string from employees;
select to_date(end_date, 'YYYY-MM-DD') as end_date_dt from job_history;

select end_date from job_history;

select to_number('1273864') from dual;


--set operators
select salary from employees 
union
select location_id from locations;

select first_name from employees
union all
select department_name from departments;

select hire_date from employees
intersect
select end_date from job_history;


select first_name, last_name from employees 
where department_id=30
minus
select first_name, last_name from employees 
where department_id=90;


--joins
select e.first_name, e.last_name, j.job_title from employees e
left join jobs j on e.job_id=j.job_id;

select d.department_name, j.start_date from departments d
right join job_history j on d.department_id=j.department_id;

select * from employees e
full join departments d on e.department_id=d.department_id;

--joins 1st part

select e.salary, jh.start_date from employees e
join job_history jh on e.job_id=jh.job_id;

select e.employee_id as emp_id, m.employee_id as mngr_id
from employees e
join employees m on e.employee_id=m.manager_id; 

select * from employees
natural join departments;

select e.first_name, e.job_id, d.department_name from employees e
join departments d using(department_id);
